{"version":3,"sources":["../../../src/components/dropdown/dropdown.js"],"names":["colors","concat","Object","values","CONSTANTS","COLORS","Dropdown","props","evt","hoverable","domRef","current","contains","target","setState","open","preventDefault","value","onChange","closeOnSelect","close","React","createRef","state","document","addEventListener","removeEventListener","className","children","color","align","right","up","label","childrenArray","Children","map","child","i","type","DropdownItem","cloneElement","active","onClick","select","console","warn","toggle","PureComponent","Item","Divider","DropdownDivider","propTypes","modifiers","PropTypes","string","style","shape","node","any","func","oneOf","bool","defaultProps","undefined","renderAs"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport CONSTANTS from '../../constants';\nimport DropdownItem from './components/item';\nimport DropdownDivider from './components/divider';\nimport Button from '../button';\nimport Icon from '../icon';\nimport modifiers from '../../modifiers';\nimport Element from '../element';\n\nconst colors = [null].concat(Object.values(CONSTANTS.COLORS));\n\nexport default class Dropdown extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.domRef = props.domRef || React.createRef();\n    this.state = {\n      open: false,\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this.close);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.close);\n  }\n\n  close = (evt) => {\n    // IDK yet how to test using the ref in enzime\n    // istanbul ignore if\n    if (\n      this.props.hoverable\n      || (evt\n        && this.domRef\n        && this.domRef.current\n        && this.domRef.current.contains(evt.target))\n    ) {\n      return;\n    }\n    if (this.domRef.current) {\n      this.setState({ open: false });\n    }\n  }\n\n  toggle = (evt) => {\n    if (this.props.hoverable) {\n      return;\n    }\n    if (evt) {\n      evt.preventDefault();\n    }\n    this.setState(({ open }) => ({ open: !open }));\n  }\n\n  select = (value) => () => {\n    if (this.props.onChange) {\n      this.props.onChange(value);\n    }\n    if (this.props.closeOnSelect) {\n      this.close();\n    }\n  }\n\n  render() {\n    const {\n      className,\n      children,\n      value,\n      color,\n      align,\n      right,\n      up,\n      hoverable,\n      label,\n      onChange,\n      closeOnSelect,\n      ...props\n    } = this.props;\n    let current = label;\n\n    const childrenArray = React.Children.map(children, (child, i) => {\n      if (child.type === DropdownItem && ((i === 0 && !label) || child.props.value === value)) {\n        current = child.props.children;\n      }\n      return React.cloneElement(child, child.type === DropdownItem ? {\n        active: child.props.value === value,\n        onClick: this.select(child.props.value),\n      } : {});\n    });\n\n    if (align === 'right') {\n      // eslint-disable-next-line no-console\n      console.warn('react-bulma-components: \"Align\" prop will be replaced by \"right\" prop in future releases. Please update your code to avoid breaking changes.');\n    }\n\n    return (\n      <Element\n        {...props}\n        domRef={this.domRef}\n        className={classnames('dropdown', className, {\n          'is-active': this.state.open,\n          'is-up': up,\n          'is-right': right || align === 'right',\n          'is-hoverable': hoverable,\n        })}\n      >\n        <div className=\"dropdown-trigger\" role=\"presentation\" onClick={this.toggle}>\n          <Button color={color}>\n            <span>\n              {current}\n            </span>\n            <Icon icon=\"angle-down\" size=\"small\" />\n          </Button>\n        </div>\n        <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n          <div className=\"dropdown-content\">\n            {childrenArray}\n          </div>\n        </div>\n      </Element>\n    );\n  }\n}\n\n\nDropdown.Item = DropdownItem;\n\nDropdown.Divider = DropdownDivider;\n\nDropdown.propTypes = {\n  ...modifiers.propTypes,\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n  children: PropTypes.node,\n  value: PropTypes.any,\n  onChange: PropTypes.func,\n  color: PropTypes.oneOf(colors),\n  right: PropTypes.bool,\n  up: PropTypes.bool,\n  align: PropTypes.oneOf(['right']),\n  hoverable: PropTypes.bool,\n  label: PropTypes.node,\n  closeOnSelect: PropTypes.bool,\n};\n\nDropdown.defaultProps = {\n  ...modifiers.defaultProps,\n  closeOnSelect: true,\n  className: undefined,\n  renderAs: 'div',\n  domRef: undefined,\n  style: undefined,\n  value: undefined,\n  children: [],\n  onChange: undefined,\n  color: undefined,\n  align: undefined,\n  hoverable: undefined,\n  label: undefined,\n};\n"],"file":"dropdown.js"}
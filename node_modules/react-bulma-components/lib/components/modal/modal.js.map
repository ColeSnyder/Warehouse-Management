{"version":3,"sources":["../../../src/components/modal/modal.js"],"names":["KEYCODES","ESCAPE","Modal","props","document","e","keyCode","show","onClose","state","closeOnEsc","doc","getDocument","portalElement","createElement","setAttribute","body","appendChild","addEventListener","handleKeydown","forceUpdate","removeEventListener","remove","domRef","closeOnBlur","className","children","isCard","React","Children","only","type","toString","indexOf","showClose","cloneElement","ReactDOM","createPortal","undefined","PureComponent","Content","ModalContent","Card","ModalCard","propTypes","PropTypes","bool","isRequired","func","node","object","string","defaultProps","createRef"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport ModalContent from './components/content';\nimport ModalCard from './components/card';\n\nconst KEYCODES = {\n  ESCAPE: 27,\n};\n\nclass Modal extends PureComponent {\n  portalElement = null;\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n\n  componentDidMount() {\n    const { closeOnEsc } = this.props;\n\n    const doc = this.getDocument();\n    this.portalElement = doc.createElement('div');\n    this.portalElement.setAttribute('class', 'modal-container');\n    doc.body.appendChild(this.portalElement);\n    // eslint-disable-next-line\n    if (closeOnEsc) {\n      doc.addEventListener('keydown', this.handleKeydown);\n    }\n    this.forceUpdate();\n  }\n\n  componentWillUnmount() {\n    const doc = this.getDocument();\n    const { closeOnEsc } = this.props;\n    if (closeOnEsc && doc) {\n      doc.removeEventListener('keydown', this.handleKeydown);\n    }\n    this.portalElement.remove();\n  }\n\n  getDocument = () => {\n    if (this.props.document) {\n      return this.props.document;\n    }\n\n    if (typeof document !== 'undefined') {\n      return document;\n    }\n\n    return null;\n  }\n\n  handleKeydown = (e) => {\n    if (e.keyCode === KEYCODES.ESCAPE && this.props.show) {\n      this.props.onClose();\n    }\n  }\n\n  render() {\n    const {\n      domRef, closeOnBlur, show, className,\n    } = this.props;\n    if (!this.getDocument() || !this.portalElement || !show) {\n      return null;\n    }\n    let { children } = this.props;\n    let isCard;\n    try {\n      isCard = React.Children.only(children).type.toString().indexOf('ModalCard') !== -1;\n    } catch (e) {\n      isCard = false;\n    }\n\n    const showClose = !isCard && this.props.showClose;\n\n    if (isCard) {\n      children = React.cloneElement(children, {\n        onClose: this.props.onClose,\n      });\n    }\n\n    return ReactDOM.createPortal(\n      <div\n        ref={domRef}\n        className={classnames('modal', className, {\n          'is-active': show,\n        })}\n      >\n        <div role=\"presentation\" className=\"modal-background\" onClick={closeOnBlur ? this.props.onClose : undefined} />\n        {children}\n        {\n          showClose && (\n            <button type=\"button\" onClick={this.props.onClose} className=\"modal-close is-large\" aria-label=\"close\" />\n          )\n        }\n      </div>,\n      this.portalElement,\n    );\n  }\n}\n\nModal.Content = ModalContent;\nModal.Card = ModalCard;\n\nModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  closeOnEsc: PropTypes.bool,\n  closeOnBlur: PropTypes.bool,\n  showClose: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  document: PropTypes.object,\n  className: PropTypes.string,\n  domRef: PropTypes.object,\n};\n\nModal.defaultProps = {\n  closeOnEsc: true,\n  showClose: true,\n  closeOnBlur: false,\n  className: undefined,\n  domRef: React.createRef(),\n  // Expose mount point for testing\n  document: undefined,\n};\n\nexport default Modal;\n"],"file":"modal.js"}
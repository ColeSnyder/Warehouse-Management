{"version":3,"sources":["../../../src/components/columns/columns.js"],"names":["breakpoints","concat","Object","keys","CONSTANTS","BREAKPOINTS","map","key","sizes","Columns","className","breakpoint","gapless","multiline","centered","vCentered","variableGap","props","length","touch","mobile","tablet","desktop","widescreen","fullhd","Column","COLUMN_CONSTANTS","propTypes","modifiers","children","PropTypes","node","string","style","shape","values","reduce","oneOf","bool","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CONSTANTS from '../../constants';\nimport Column from './components/column';\nimport COLUMN_CONSTANTS from './constants';\nimport modifiers from '../../modifiers';\nimport Element from '../element';\n\nconst breakpoints = [null].concat(Object.keys(CONSTANTS.BREAKPOINTS).map((key) => CONSTANTS.BREAKPOINTS[key]));\n\nconst sizes = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n\nconst Columns = ({\n  className,\n  breakpoint,\n  gapless,\n  multiline,\n  centered,\n  vCentered,\n  variableGap,\n  ...props\n}) => (\n  <Element\n    {...props}\n    className={classNames(className, 'columns', {\n      [`is-${breakpoint}`]: breakpoint,\n      'is-gapless': gapless,\n      'is-multiline': multiline,\n      'is-centered': centered,\n      'is-vcentered': vCentered,\n      'is-variable': Object.keys(variableGap).length > 0,\n      ...(variableGap ? {\n        [`is-${variableGap.touch}-touch`]: variableGap.touch,\n        [`is-${variableGap.mobile}-mobile`]: variableGap.mobile,\n        [`is-${variableGap.tablet}-tablet`]: variableGap.tablet,\n        [`is-${variableGap.desktop}-desktop`]: variableGap.desktop,\n        [`is-${variableGap.widescreen}-widescreen`]: variableGap.widescreen,\n        [`is-${variableGap.fullhd}-fullhd`]: variableGap.fullhd,\n      } : {}),\n    })}\n  />\n);\n\nColumns.Column = Column;\n\nColumns.CONSTANTS = COLUMN_CONSTANTS;\n\nColumns.propTypes = {\n  ...modifiers.propTypes,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n  variableGap: PropTypes.shape({\n    ...Object.values(CONSTANTS.BREAKPOINTS).reduce((values, breakpoint) => ({\n      ...values,\n      [breakpoint]: PropTypes.oneOf(sizes),\n    }), {}),\n  }),\n  /**\n     * Breakpoint where columns become stacked.\n     */\n  breakpoint: PropTypes.oneOf(breakpoints),\n  /**\n     * `true` to remove space between columns\n     */\n  gapless: PropTypes.bool,\n  /**\n     * `true` if you want to use more than one line if you add more column elements that would fit in a single row.\n     */\n  multiline: PropTypes.bool,\n  /**\n     * `true` you want the columns inside to be horizontaly centered\n     */\n  centered: PropTypes.bool,\n  /**\n   * `true` if you want to vertically align columns\n   */\n  vCentered: PropTypes.bool,\n};\n\nColumns.defaultProps = {\n  ...modifiers.defaultProps,\n  children: null,\n  className: undefined,\n  style: undefined,\n  breakpoint: undefined,\n  gapless: false,\n  centered: false,\n  vCentered: false,\n  multiline: true,\n  variableGap: {},\n};\n\nexport default Columns;\n"],"file":"columns.js"}
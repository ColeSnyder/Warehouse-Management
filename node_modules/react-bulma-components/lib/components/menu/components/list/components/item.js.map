{"version":3,"sources":["../../../../../../src/components/menu/components/list/components/item.js"],"names":["MenuListItem","children","active","className","ref","domRef","props","React","Children","toArray","length","only","type","List","child","title","cloneElement","undefined","propTypes","modifiers","PropTypes","string","oneOfType","element","bool","renderAs","renderAsShape","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,OAMf;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,MAII,QAJJA,MAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFIC,GAEJ,QAFJC,MAEI;AAAA,MADDC,KACC;;AACJ,MAAI,OAAOL,QAAP,KAAoB,QAApB,IAAgCM,kBAAMC,QAAN,CAAeC,OAAf,CAAuBR,QAAvB,EAAiCS,MAAjC,KAA4C,CAA5E,IAAiFH,kBAAMC,QAAN,CAAeG,IAAf,CAAoBV,QAApB,EAA8BW,IAA9B,KAAuCC,gBAA5H,EAAkI;AAChI,QAAMC,KAAK,GAAGP,kBAAMC,QAAN,CAAeG,IAAf,CAAoBV,QAApB,CAAd;;AACA,WACE;AAAI,MAAA,GAAG,EAAEG;AAAT,OACE,gCAAC,mBAAD;AAAS,MAAA,SAAS,EAAE,4BAAWD,SAAX,EAAsB;AAAE,qBAAaD;AAAf,OAAtB;AAApB,OAAwEI,KAAxE,GACGQ,KAAK,CAACR,KAAN,CAAYS,KADf,CADF,EAIGR,kBAAMS,YAAN,CAAmBF,KAAnB,EAA0B;AAAEC,MAAAA,KAAK,EAAEE;AAAT,KAA1B,CAJH,CADF;AAQD;;AAED,SACE;AAAI,IAAA,GAAG,EAAEb;AAAT,KACE,gCAAC,mBAAD;AAAS,IAAA,SAAS,EAAE,4BAAWD,SAAX,EAAsB;AAAE,mBAAaD;AAAf,KAAtB;AAApB,KAAwEI,KAAxE,GACGL,QADH,CADF,CADF;AAOD,CA1BD;;AA4BAD,YAAY,CAACkB,SAAb,qBACKC,sBAAUD,SADf;AAEEf,EAAAA,SAAS,EAAEiB,sBAAUC,MAFvB;AAGEpB,EAAAA,QAAQ,EAAEmB,sBAAUE,SAAV,CAAoB,CAC5BF,sBAAUC,MADkB,EAE5BD,sBAAUG,OAFkB,CAApB,CAHZ;AAOErB,EAAAA,MAAM,EAAEkB,sBAAUI,IAPpB;AAQEC,EAAAA,QAAQ,EAAEC;AARZ;AAWA1B,YAAY,CAAC2B,YAAb,qBACKR,sBAAUQ,YADf;AAEExB,EAAAA,SAAS,EAAEc,SAFb;AAGEhB,EAAAA,QAAQ,EAAE,IAHZ;AAIEC,EAAAA,MAAM,EAAE,KAJV;AAKEuB,EAAAA,QAAQ,EAAE;AALZ;eAQezB,Y","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n/* eslint-disable-next-line import/no-cycle */\nimport List from '../list';\nimport modifiers from '../../../../../modifiers';\nimport Element from '../../../../element';\nimport renderAsShape from '../../../../../modifiers/render-as';\n\nconst MenuListItem = ({\n  children,\n  active,\n  className,\n  domRef: ref,\n  ...props\n}) => {\n  if (typeof children !== 'string' && React.Children.toArray(children).length === 1 && React.Children.only(children).type === List) {\n    const child = React.Children.only(children);\n    return (\n      <li ref={ref}>\n        <Element className={classnames(className, { 'is-active': active })} {...props}>\n          {child.props.title}\n        </Element>\n        {React.cloneElement(child, { title: undefined })}\n      </li>\n    );\n  }\n\n  return (\n    <li ref={ref}>\n      <Element className={classnames(className, { 'is-active': active })} {...props}>\n        {children}\n      </Element>\n    </li>\n  );\n};\n\nMenuListItem.propTypes = {\n  ...modifiers.propTypes,\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n  ]),\n  active: PropTypes.bool,\n  renderAs: renderAsShape,\n};\n\nMenuListItem.defaultProps = {\n  ...modifiers.defaultProps,\n  className: undefined,\n  children: null,\n  active: false,\n  renderAs: 'a',\n};\n\nexport default MenuListItem;\n"],"file":"item.js"}
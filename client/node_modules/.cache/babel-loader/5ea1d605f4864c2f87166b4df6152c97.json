{"ast":null,"code":"var _jsxFileName = \"/Users/colesnyder/Desktop/mernApp/client/src/bins.js\";\n// Copyright Cole Snyder 2020 \nimport React from 'react';\nimport axios from 'axios';\nimport { Container, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport './App.css';\n\nclass Bins extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      BinID: '',\n      BinName: '',\n      _id: '',\n      posts: [],\n      modalIsOpen: false,\n      updateModalIsOpen: false\n    };\n\n    this.componentDidMount = () => {\n      this.getBins();\n    };\n\n    this.getBins = () => {\n      axios.get('/api/bins').then(response => {\n        const data = response.data;\n        this.setState({\n          posts: data\n        });\n        console.log('Data has been recieved');\n      }).catch(() => {// alert('error retrieving data');\n      });\n    };\n\n    this.handleChange = ({\n      target\n    }) => {\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.submit = event => {\n      event.preventDefault();\n      const payload = {\n        BinID: this.state.BinID,\n        BinName: this.state.BinName // _id: this.state._id\n\n      };\n      axios({\n        url: 'http://localhost:3000/api/saveBin',\n        method: 'POST',\n        data: payload\n      }).then(() => {\n        console.log('Data has been sent to the server');\n        this.resetUserInputs();\n        this.getBins();\n      }).catch(() => {\n        console.log('Internal server error');\n      });\n      this.setState({\n        modalIsOpen: !this.state.modalIsOpen\n      });\n    };\n\n    this.delete = (data, event) => {\n      event.preventDefault();\n      console.log('Data before sending to server: ', data._id);\n      axios({\n        url: 'http://localhost:3000/api/deleteBin/' + data._id,\n        method: 'POST',\n        data: data._id\n      }).then(() => {\n        console.log('Data has been sent to the server');\n      }).catch(() => {\n        console.log('Internal server error');\n      });\n      this.getBins();\n    };\n\n    this.update = (data, event) => {\n      event.preventDefault();\n      const payload = {\n        BinID: this.state.BinID,\n        BinName: this.state.BinName,\n        _id: this.state._id\n      };\n      axios({\n        url: 'http://localhost:3000/api/updateBin/' + data._id + '/' + data.BinID + '/' + data.BinName,\n        method: 'POST',\n        data: payload\n      }).then(() => {\n        console.log('Data has been sent to the server');\n      }).catch(() => {\n        console.log('Internal server error');\n      });\n      this.resetUserInputs();\n      this.getBins();\n    };\n\n    this.resetUserInputs = () => {\n      this.setState({\n        BinID: '',\n        BinName: '',\n        _id: ''\n      });\n    };\n\n    this.displayBinPosts = posts => {\n      if (!posts.length) return null; // iterate through items using map function and display in their respective fields\n\n      return posts.map((post, index) => React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row db-item\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-3 item-comp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Bin ID:\"), \" \", post.BinID)), React.createElement(\"div\", {\n        className: \"col-4 item-comp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Bin Name:\"), \" \", post.BinName)), React.createElement(\"div\", {\n        className: \"col-4 item-comp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        value: post._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"_id:\"), \" \", React.createElement(\"a\", {\n        onClick: this.setModal.bind(this, post),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, post._id))), React.createElement(\"div\", {\n        className: \"col-1 item-comp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"delete-item\",\n        onClick: this.delete.bind(this, post),\n        value: post._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Delete\")))))));\n    };\n\n    this.toggleModal = () => {\n      this.setState({\n        modalIsOpen: !this.state.modalIsOpen\n      });\n    };\n\n    this.toggleUpdateModal = () => {\n      this.setState({\n        updateModalIsOpen: !this.state.updateModalIsOpen\n      });\n    };\n\n    this.setModal = (data, event) => {\n      this.setState({\n        BinID: data.BinID,\n        BinName: data.BinName,\n        _id: data._id\n      });\n      this.toggleUpdateModal();\n    };\n  }\n\n  render() {\n    console.log('State: ', this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.state.modalIsOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggleModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Bins\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"banner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Add a bin\")), React.createElement(\"div\", {\n      className: \"add-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"BinID\",\n      value: this.state.BinID,\n      placeholder: \"Bin ID\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"BinName\",\n      value: this.state.BinName,\n      placeholder: \"Bin Name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Add\"))))))), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.state.updateModalIsOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggleUpdateModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Bins\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"update update-bins\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"banner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Add a bin\")), React.createElement(\"div\", {\n      className: \"add-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"BinID\",\n      value: this.state.BinID,\n      placeholder: \"Bin ID\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"BinName\",\n      value: this.state.BinName,\n      placeholder: \"Bin Name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Add\"))))))), React.createElement(\"div\", {\n      className: \"dummy-links\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-download icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"fa fa-bell icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"fa fa-print icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"fa fa-bookmark icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"fa fa-database icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"fa fa-pause icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"fa fa-plus icons\",\n      type: \"button\",\n      onClick: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"main-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"banner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Bins\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"bin-posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, this.displayBinPosts(this.state.posts))));\n  }\n\n} // exports the component to be rendered in other files (App.js)\n\n\nexport default Bins;","map":{"version":3,"sources":["/Users/colesnyder/Desktop/mernApp/client/src/bins.js"],"names":["React","axios","Container","Modal","ModalHeader","ModalBody","Bins","Component","state","BinID","BinName","_id","posts","modalIsOpen","updateModalIsOpen","componentDidMount","getBins","get","then","response","data","setState","console","log","catch","handleChange","target","name","value","submit","event","preventDefault","payload","url","method","resetUserInputs","delete","update","displayBinPosts","length","map","post","index","setModal","bind","toggleModal","toggleUpdateModal","render"],"mappings":"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","sourcesContent":["// Copyright Cole Snyder 2020 \nimport React from 'react';\nimport axios from 'axios';\nimport { Container, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport './App.css';\n\nclass Bins extends React.Component {\n\n  state = {\n    BinID: '',\n    BinName: '',\n    _id: '',\n    posts: [],\n    modalIsOpen: false,\n    updateModalIsOpen: false,\n  };\n\n  componentDidMount = () => {\n    this.getBins();\n  };\n\n  // axios calls reach out to the server\n  getBins = () => {\n    axios.get('/api/bins')\n      .then((response) => {\n        const data = response.data;\n        this.setState({ posts: data });\n        console.log('Data has been recieved');\n      })\n      .catch(() => {\n        // alert('error retrieving data');\n      });\n  }\n\n  // used to manage when users type in text boxes and input fields\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  // calls to api.js when user is adding to database\n  submit = (event) => {\n    event.preventDefault();\n\n    const payload = {\n      BinID: this.state.BinID,\n      BinName: this.state.BinName\n      // _id: this.state._id\n    };\n\n    axios({\n      url: 'http://localhost:3000/api/saveBin',\n      method: 'POST',\n      data: payload\n    })\n      .then(() => {\n        console.log('Data has been sent to the server');\n        this.resetUserInputs();\n        this.getBins();\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });\n      this.setState({\n        modalIsOpen: ! this.state.modalIsOpen\n      });\n  };\n\n  // calls to api.js when user is deleting to database\n  delete = (data, event) => {\n    event.preventDefault();\n\n    console.log('Data before sending to server: ', data._id);\n\n    axios({\n      url: 'http://localhost:3000/api/deleteBin/' + data._id ,\n      method: 'POST',\n      data: data._id\n    })\n      .then(() => {\n        console.log('Data has been sent to the server');\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });\n      this.getBins();\n  };\n\n  // calls to api.js when user is updating  database\n  update = (data, event) => {\n    event.preventDefault();\n\n    const payload = {\n      BinID: this.state.BinID,\n      BinName: this.state.BinName,\n      _id: this.state._id\n    };\n\n    axios({\n      url: 'http://localhost:3000/api/updateBin/' + data._id + '/' + data.BinID + '/' + data.BinName,\n      method: 'POST',\n      data: payload\n    })\n      .then(() => {\n        console.log('Data has been sent to the server');\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });\n      this.resetUserInputs();\n      this.getBins();\n  };\n\n  // resets input fields after \n  resetUserInputs = () => {\n    this.setState({\n      BinID: '',\n      BinName: '',\n      _id: ''\n    });\n  };\n\n  // function for displaying all bin posts in database. In a real world application, there would be logic\n  // here for only displaying a certain amount of items in database since there would more than likely \n  // be a large amount of data.\n  displayBinPosts = (posts) => {\n\n    if (!posts.length) return null;\n\n    // iterate through items using map function and display in their respective fields\n    return posts.map((post, index) => (\n\n      <ul>\n        <li>\n          <div className=\"container\">\n            <div className=\"row db-item\" key={index}> \n              <div className=\"col-3 item-comp\">\n                <h5><strong>Bin ID:</strong> {post.BinID}</h5>\n              </div>\n              <div className=\"col-4 item-comp\">\n                <p><strong>Bin Name:</strong> {post.BinName}</p>\n              </div>\n              <div className=\"col-4 item-comp\">\n                <p value={post._id}><strong>_id:</strong> <a onClick={this.setModal.bind(this, post)}>{post._id}</a></p>\n              </div>\n              <div className=\"col-1 item-comp\">\n                <p className=\"delete-item\" onClick={this.delete.bind(this, post)} value={post._id}>Delete</p>\n              </div>\n            </div>\n          </div>\n        </li>\n      </ul>\n\n    ));\n  };\n\n  // function toggles modal\n  toggleModal = () => {\n    this.setState({\n      modalIsOpen: ! this.state.modalIsOpen\n    });\n}\n\n  // function toggles modal\n  toggleUpdateModal = () => {\n    this.setState({\n      updateModalIsOpen: ! this.state.updateModalIsOpen\n    });\n}\n\n  // function sets state of update modal\n  setModal = (data, event) => {\n    this.setState({\n      BinID: data.BinID,\n      BinName: data.BinName,\n      _id: data._id\n    });\n\n    this.toggleUpdateModal();\n\n}\n\n  render() {\n\n    console.log('State: ', this.state);\n\n    return(\n\n      <div>\n\n<Container>\n  <Modal isOpen={this.state.modalIsOpen}>\n    <ModalHeader toggle={this.toggleModal.bind(this)}>\n      Bins\n    </ModalHeader>\n    <ModalBody>\n    <div className=\"add\">\n          <div className=\"banner\"><h4>Add a bin</h4></div>\n            <div className=\"add-body\">\n            <form onSubmit={this.submit}>\n              <div className=\"form-input\">\n                <input\n                  type=\"text\"\n                  name=\"BinID\"\n                  value={this.state.BinID}\n                  placeholder=\"Bin ID\"\n                  onChange={this.handleChange}\n                /> \n              </div>\n              <div className=\"form-input\">\n                <input\n                  type=\"text\"\n                  name=\"BinName\"\n                  value={this.state.BinName}\n                  placeholder=\"Bin Name\"\n                  onChange={this.handleChange}\n                /> \n              </div>\n              <button>Add</button>\n            </form>\n        </div>\n        </div>\n    </ModalBody>\n  </Modal>\n</Container>\n\n<Container>\n  <Modal isOpen={this.state.updateModalIsOpen}>\n    <ModalHeader toggle={this.toggleUpdateModal.bind(this)}>\n      Bins\n    </ModalHeader>\n    <ModalBody>\n\n    <div className=\"update update-bins\">\n          <div className=\"banner\"><h4>Add a bin</h4></div>\n            <div className=\"add-body\">\n            <form onSubmit={this.submit}>\n              <div className=\"form-input\">\n                <input\n                  type=\"text\"\n                  name=\"BinID\"\n                  value={this.state.BinID}\n                  placeholder=\"Bin ID\"\n                  onChange={this.handleChange}\n                /> \n              </div>\n              <div className=\"form-input\">\n                <input\n                  type=\"text\"\n                  name=\"BinName\"\n                  value={this.state.BinName}\n                  placeholder=\"Bin Name\"\n                  onChange={this.handleChange}\n                /> \n              </div>\n              <button>Add</button>\n            </form>\n        </div>\n        </div>\n\n          {/* <div className=\"update update-bins\">\n          <div className=\"banner\"><h4>Update bin</h4></div>\n            <div className=\"add-body\">\n            <form onSubmit={this.update}>\n            <div className=\"form-input\">\n                <input\n                  type=\"text\"\n                  name=\"_id\"\n                  value={this.state._id}\n                  placeholder=\"Unique Document ID\"\n                  onChange={this.handleChange}\n                /> \n              </div>\n              <div className=\"form-input\">\n                <input\n                  type=\"text\"\n                  name=\"BinID\"\n                  value={this.state.BinID}\n                  placeholder=\"Bin ID\"\n                  onChange={this.handleChange}\n                /> \n              </div>\n              <div className=\"form-input\">\n                <input\n                  type=\"text\"\n                  name=\"BinName\"\n                  value={this.state.BinName}\n                  placeholder=\"Bin Name\"\n                  onChange={this.handleChange}\n                /> \n              </div>\n              <button type=\"button\" onClick={this.update.bind(this, this.state)}>Update</button>\n            </form>\n        </div>\n        </div> */}\n    </ModalBody>\n  </Modal>\n</Container>\n\n      <div className=\"dummy-links\">\n        <i className=\"fa fa-download icons\"></i>\n        <i className=\"fa fa-bell icons\"></i>\n        <i className=\"fa fa-print icons\"></i>\n        <i className=\"fa fa-bookmark icons\"></i>\n        <i className=\"fa fa-database icons\"></i>\n        <i className=\"fa fa-pause icons\"></i>\n        <i className=\"fa fa-plus icons\" type=\"button\" onClick={this.toggleModal}></i>\n      </div>  \n\n      <div className=\"main-container\">\n        <div className=\"banner\"><h1>Bins</h1></div>\n          <br></br>\n\n        <div className=\"bin-posts\">\n          {this.displayBinPosts(this.state.posts)}\n        </div>\n\n    </div>\n    </div>\n    );\n  }\n}\n\n// exports the component to be rendered in other files (App.js)\nexport default Bins;\n"]},"metadata":{},"sourceType":"module"}
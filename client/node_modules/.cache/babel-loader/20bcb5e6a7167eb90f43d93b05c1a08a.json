{"ast":null,"code":"var _jsxFileName = \"/Users/colesnyder/Desktop/mernApp/client/src/bins.js\";\n// Copyright Cole Snyder 2020 \nimport React from 'react';\nimport axios from 'axios';\nimport ReactDOM from \"react-dom\";\nimport './App.css';\n\nclass Bins extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      BinID: '',\n      BinName: '',\n      _id: '',\n      posts: [],\n      show: false\n    };\n\n    this.componentDidMount = () => {\n      this.getBins();\n    };\n\n    this.getBins = () => {\n      axios.get('/api/bins').then(response => {\n        const data = response.data;\n        this.setState({\n          posts: data\n        });\n        console.log('Data has been recieved');\n      }).catch(() => {// alert('error retrieving data');\n      });\n    };\n\n    this.handleChange = ({\n      target\n    }) => {\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.submit = event => {\n      event.preventDefault();\n      const payload = {\n        BinID: this.state.BinID,\n        BinName: this.state.BinName // _id: this.state._id\n\n      };\n      axios({\n        url: 'http://localhost:3000/api/saveBin',\n        method: 'POST',\n        data: payload\n      }).then(() => {\n        console.log('Data has been sent to the server');\n        this.resetUserInputs();\n        this.getBins();\n      }).catch(() => {\n        console.log('Internal server error');\n      });\n    };\n\n    this.delete = (data, event) => {\n      event.preventDefault();\n      console.log('Data before sending to server: ', data._id);\n      axios({\n        url: 'http://localhost:3000/api/deleteBin/' + data._id,\n        method: 'POST',\n        data: data._id\n      }).then(() => {\n        console.log('Data has been sent to the server');\n      }).catch(() => {\n        console.log('Internal server error');\n      });\n      this.getBins();\n    };\n\n    this.update = (data, event) => {\n      event.preventDefault();\n      const payload = {\n        BinID: this.state.BinID,\n        BinName: this.state.BinName,\n        _id: this.state._id\n      };\n      axios({\n        url: 'http://localhost:3000/api/updateBin/' + data._id + '/' + data.BinID + '/' + data.BinName,\n        method: 'POST',\n        data: payload\n      }).then(() => {\n        console.log('Data has been sent to the server');\n      }).catch(() => {\n        console.log('Internal server error');\n      });\n      this.resetUserInputs();\n      this.getBins();\n    };\n\n    this.resetUserInputs = () => {\n      this.setState({\n        BinID: '',\n        BinName: '',\n        _id: ''\n      });\n    };\n\n    this.displayBinPosts = posts => {\n      if (!posts.length) return null;\n      return posts.map((post, index) => React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row db-item\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-3 item-comp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Bin ID:\"), \" \", post.BinID)), React.createElement(\"div\", {\n        className: \"col-4 item-comp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Bin Name:\"), \" \", post.BinName)), React.createElement(\"div\", {\n        className: \"col-4 item-comp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        value: post._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"_id:\"), \" \", post._id)), React.createElement(\"div\", {\n        className: \"col-1 item-comp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"delete-item\",\n        onClick: this.delete.bind(this, post),\n        value: post._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Delete\")))))));\n    };\n\n    this.showModal = () => {\n      this.setState({\n        show: true\n      });\n    };\n\n    this.hideModal = () => {\n      this.setState({\n        show: false\n      });\n    };\n  }\n\n  render() {\n    console.log('State: ', this.state);\n    return {\n      /* <div>\n      <div className=\"dummy-links\">\n       <i className=\"fa fa-download icons\"></i>\n       <i className=\"fa fa-bell icons\"></i>\n       <i className=\"fa fa-print icons\"></i>\n       <i className=\"fa fa-bookmark icons\"></i>\n       <i className=\"fa fa-database icons\"></i>\n       <i className=\"fa fa-pause icons\"></i>\n       <i className=\"fa fa-plus icons\" type=\"button\" onClick={this.showModal}></i>\n      </div>  \n      <div className=\"main-container\">\n       <div className=\"banner\"><h1>Bins</h1></div>\n         <br></br>\n        <div className=\"bin-posts\">\n         {this.displayBinPosts(this.state.posts)}\n       </div>\n        <div className=\"add\">\n         <div className=\"banner\"><h4>Add a bin</h4></div>\n           <div className=\"add-body\">\n           <form onSubmit={this.submit}>\n             <div className=\"form-input\">\n               <input\n                 type=\"text\"\n                 name=\"BinID\"\n                 value={this.state.BinID}\n                 placeholder=\"Bin ID\"\n                 onChange={this.handleChange}\n               /> \n             </div>\n             <div className=\"form-input\">\n               <input\n                 type=\"text\"\n                 name=\"BinName\"\n                 value={this.state.BinName}\n                 placeholder=\"Bin Name\"\n                 onChange={this.handleChange}\n               /> \n             </div>\n             <button>Add</button>\n           </form>\n       </div>\n       </div>\n         <div className=\"update update-bins\">\n         <div className=\"banner\"><h4>Update bin</h4></div>\n           <div className=\"add-body\">\n           <form onSubmit={this.update}>\n           <div className=\"form-input\">\n               <input\n                 type=\"text\"\n                 name=\"_id\"\n                 value={this.state._id}\n                 placeholder=\"Unique Document ID\"\n                 onChange={this.handleChange}\n               /> \n             </div>\n             <div className=\"form-input\">\n               <input\n                 type=\"text\"\n                 name=\"BinID\"\n                 value={this.state.BinID}\n                 placeholder=\"Bin ID\"\n                 onChange={this.handleChange}\n               /> \n             </div>\n             <div className=\"form-input\">\n               <input\n                 type=\"text\"\n                 name=\"BinName\"\n                 value={this.state.BinName}\n                 placeholder=\"Bin Name\"\n                 onChange={this.handleChange}\n               /> \n             </div>\n             <button type=\"button\" onClick={this.update.bind(this, this.state)}>Update</button>\n           </form>\n       </div>\n       </div>\n      </div>\n      </div> */\n    };\n  }\n\n}\n\nconst container = document.createElement(\"div\");\ndocument.body.appendChild(container);\nReactDOM.render(React.createElement(Bins, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 250\n  },\n  __self: this\n}), container);\nexport default Bins;","map":{"version":3,"sources":["/Users/colesnyder/Desktop/mernApp/client/src/bins.js"],"names":["React","axios","ReactDOM","Bins","Component","state","BinID","BinName","_id","posts","show","componentDidMount","getBins","get","then","response","data","setState","console","log","catch","handleChange","target","name","value","submit","event","preventDefault","payload","url","method","resetUserInputs","delete","update","displayBinPosts","length","map","post","index","bind","showModal","hideModal","render","container","document","createElement","body","appendChild"],"mappings":"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","sourcesContent":["// Copyright Cole Snyder 2020 \nimport React from 'react';\nimport axios from 'axios';\nimport ReactDOM from \"react-dom\";\n\nimport './App.css';\n\nclass Bins extends React.Component {\n\n  state = {\n    BinID: '',\n    BinName: '',\n    _id: '',\n    posts: [],\n    show: false\n  };\n\n  componentDidMount = () => {\n    this.getBins();\n  };\n\n  getBins = () => {\n    axios.get('/api/bins')\n      .then((response) => {\n        const data = response.data;\n        this.setState({ posts: data });\n        console.log('Data has been recieved');\n      })\n      .catch(() => {\n        // alert('error retrieving data');\n      });\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n\n  submit = (event) => {\n    event.preventDefault();\n\n    const payload = {\n      BinID: this.state.BinID,\n      BinName: this.state.BinName\n      // _id: this.state._id\n    };\n\n    axios({\n      url: 'http://localhost:3000/api/saveBin',\n      method: 'POST',\n      data: payload\n    })\n      .then(() => {\n        console.log('Data has been sent to the server');\n        this.resetUserInputs();\n        this.getBins();\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });\n  };\n\n  delete = (data, event) => {\n    event.preventDefault();\n\n    console.log('Data before sending to server: ', data._id);\n\n    axios({\n      url: 'http://localhost:3000/api/deleteBin/' + data._id ,\n      method: 'POST',\n      data: data._id\n    })\n      .then(() => {\n        console.log('Data has been sent to the server');\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });\n      this.getBins();\n  };\n\n  update = (data, event) => {\n    event.preventDefault();\n\n    const payload = {\n      BinID: this.state.BinID,\n      BinName: this.state.BinName,\n      _id: this.state._id\n    };\n\n    axios({\n      url: 'http://localhost:3000/api/updateBin/' + data._id + '/' + data.BinID + '/' + data.BinName,\n      method: 'POST',\n      data: payload\n    })\n      .then(() => {\n        console.log('Data has been sent to the server');\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });\n      this.resetUserInputs();\n      this.getBins();\n  };\n\n  resetUserInputs = () => {\n    this.setState({\n      BinID: '',\n      BinName: '',\n      _id: ''\n    });\n  };\n\n  displayBinPosts = (posts) => {\n\n    if (!posts.length) return null;\n\n    return posts.map((post, index) => (\n\n      <ul>\n        <li>\n          <div className=\"container\">\n            <div className=\"row db-item\" key={index}> \n              <div className=\"col-3 item-comp\">\n                <h5><strong>Bin ID:</strong> {post.BinID}</h5>\n              </div>\n              <div className=\"col-4 item-comp\">\n                <p><strong>Bin Name:</strong> {post.BinName}</p>\n              </div>\n              <div className=\"col-4 item-comp\">\n                <p value={post._id}><strong>_id:</strong> {post._id}</p>\n              </div>\n              <div className=\"col-1 item-comp\">\n                <p className=\"delete-item\" onClick={this.delete.bind(this, post)} value={post._id}>Delete</p>\n              </div>\n            </div>\n          </div>\n        </li>\n      </ul>\n\n    ));\n  };\n\n  showModal = () => {\n    this.setState({ show: true });\n  };\n\n  hideModal = () => {\n    this.setState({ show: false });\n  };\n\n  render() {\n\n    console.log('State: ', this.state);\n\n    return(\n\n      {/* <div>\n      <div className=\"dummy-links\">\n        <i className=\"fa fa-download icons\"></i>\n        <i className=\"fa fa-bell icons\"></i>\n        <i className=\"fa fa-print icons\"></i>\n        <i className=\"fa fa-bookmark icons\"></i>\n        <i className=\"fa fa-database icons\"></i>\n        <i className=\"fa fa-pause icons\"></i>\n        <i className=\"fa fa-plus icons\" type=\"button\" onClick={this.showModal}></i>\n      </div>  \n\n      <div className=\"main-container\">\n        <div className=\"banner\"><h1>Bins</h1></div>\n          <br></br>\n\n        <div className=\"bin-posts\">\n          {this.displayBinPosts(this.state.posts)}\n        </div>\n\n        <div className=\"add\">\n          <div className=\"banner\"><h4>Add a bin</h4></div>\n            <div className=\"add-body\">\n            <form onSubmit={this.submit}>\n              <div className=\"form-input\">\n                <input\n                  type=\"text\"\n                  name=\"BinID\"\n                  value={this.state.BinID}\n                  placeholder=\"Bin ID\"\n                  onChange={this.handleChange}\n                /> \n              </div>\n              <div className=\"form-input\">\n                <input\n                  type=\"text\"\n                  name=\"BinName\"\n                  value={this.state.BinName}\n                  placeholder=\"Bin Name\"\n                  onChange={this.handleChange}\n                /> \n              </div>\n              <button>Add</button>\n            </form>\n        </div>\n        </div>\n\n\n        <div className=\"update update-bins\">\n          <div className=\"banner\"><h4>Update bin</h4></div>\n            <div className=\"add-body\">\n            <form onSubmit={this.update}>\n            <div className=\"form-input\">\n                <input\n                  type=\"text\"\n                  name=\"_id\"\n                  value={this.state._id}\n                  placeholder=\"Unique Document ID\"\n                  onChange={this.handleChange}\n                /> \n              </div>\n              <div className=\"form-input\">\n                <input\n                  type=\"text\"\n                  name=\"BinID\"\n                  value={this.state.BinID}\n                  placeholder=\"Bin ID\"\n                  onChange={this.handleChange}\n                /> \n              </div>\n              <div className=\"form-input\">\n                <input\n                  type=\"text\"\n                  name=\"BinName\"\n                  value={this.state.BinName}\n                  placeholder=\"Bin Name\"\n                  onChange={this.handleChange}\n                /> \n              </div>\n              <button type=\"button\" onClick={this.update.bind(this, this.state)}>Update</button>\n            </form>\n        </div>\n        </div>\n\n    </div>\n    </div> */}\n    );\n  }\n}\n\nconst container = document.createElement(\"div\");\ndocument.body.appendChild(container);\nReactDOM.render(<Bins />, container);\n\nexport default Bins;\n"]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["bins.js","product.js","inventory.js","order.js","order-lines.js","home.js","App.js","serviceWorker.js","index.js"],"names":["Bins","state","BinID","BinName","_id","posts","modalIsOpen","updateModalIsOpen","componentDidMount","getBins","axios","get","then","response","data","setState","console","log","catch","handleChange","target","name","value","bannerClick","type","alert","submit","event","preventDefault","payload","url","method","resetUserInputs","delete","update","displayBinPosts","length","map","post","index","className","key","onClick","setModal","bind","toggleModal","toggleUpdateModal","this","Container","Modal","isOpen","ModalHeader","toggle","ModalBody","onSubmit","placeholder","onChange","React","Component","Products","ProductID","SKU","ProductDescription","getProducts","displayProductPosts","Inventory","InventoryID","QTY","getInventory","displayInventoryPosts","Order","OrderID","OrderNumber","DateOrdered","CustomerName","CustomerAddress","getOrders","displayOrderPosts","OrderLine","OrderLineID","getOrderLines","displayOrderLinePosts","Home","to","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.97ce3920.chunk.js","sourcesContent":["// Copyright Cole Snyder 2020 \nimport React from 'react';\nimport axios from 'axios';\nimport { Container, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport './App.css';\n\nclass Bins extends React.Component {\n\n  state = {\n    BinID: '',\n    BinName: '',\n    _id: '',\n    posts: [],\n    modalIsOpen: false,\n    updateModalIsOpen: false\n  };\n\n  componentDidMount = () => {\n    this.getBins();\n  };\n\n  // axios calls reach out to the server\n  getBins = () => {\n    axios.get('/api/bins')\n      .then((response) => {\n        const data = response.data;\n        this.setState({ posts: data });\n        console.log('Data has been recieved');\n      })\n      .catch(() => {\n        // alert('error retrieving data');\n      });\n  }\n\n  // used to manage when users type in text boxes and input fields\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  // manages the alerts sent by the banner\n  bannerClick = (data, type) => {\n    if (data == \"search\") {\n      alert(\"This icon would allow users to search for a specific item in this collection.\");\n    } else if (data == \"pause\") {\n      alert(\"This icon would allow users to pause the flow of data from the backend, stopping the asynchronous data flow.\");\n    } else if (data == \"database\") {\n      alert(\"This icon would allow users to check diagnostics from the database.\");\n    } else if (data == \"bookmark\") {\n      alert(\"This icon would allow users to bookmark this collection for later use.\");\n    } else if (data == \"print\") {\n      alert(\"This icon would allow users to print out the results of a collection of documents.\");\n    } else if (data == \"bell\") {\n      alert(\"This icon would allow users to turn on notifications for a specific collection.\");\n    } else if (data == \"download\") {\n      alert(\"This icon would allow users to download the current collection as a PDF.\");\n    } else if (data == \"sort\") {\n      alert(\"This icon would allow users to sort the collection by number or letter.\");\n    }\n  };\n\n  // calls to api.js when user is adding to database\n  submit = (event) => {\n    event.preventDefault();\n\n    const payload = {\n      BinID: this.state.BinID,\n      BinName: this.state.BinName\n      // _id: this.state._id\n    };\n\n    axios({\n      url: 'http://localhost:3000/api/saveBin',\n      method: 'POST',\n      data: payload\n    })\n      .then(() => {\n        console.log('Data has been sent to the server');\n        this.resetUserInputs();\n        this.getBins();\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });\n      this.setState({\n        modalIsOpen: ! this.state.modalIsOpen\n      });\n  };\n\n  // calls to api.js when user is deleting to database\n  delete = (data, event) => {\n    event.preventDefault();\n\n    console.log('Data before sending to server: ', data._id);\n\n    axios({\n      url: 'http://localhost:3000/api/deleteBin/' + data._id ,\n      method: 'POST',\n      data: data._id\n    })\n      .then(() => {\n        console.log('Data has been sent to the server');\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });\n      this.getBins();\n  };\n\n  // calls to api.js when user is updating  database\n  update = (data, event) => {\n    event.preventDefault();\n\n    const payload = {\n      BinID: this.state.BinID,\n      BinName: this.state.BinName,\n      _id: this.state._id\n    };\n\n    axios({\n      url: 'http://localhost:3000/api/updateBin/' + data._id + '/' + data.BinID + '/' + data.BinName,\n      method: 'POST',\n      data: payload\n    })\n      .then(() => {\n        console.log('Data has been sent to the server');\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });\n      this.resetUserInputs();\n      this.getBins();\n      this.setState({\n        updateModalIsOpen: ! this.state.updateModalIsOpen\n      });\n  };\n\n  // resets input fields after \n  resetUserInputs = () => {\n    this.setState({\n      BinID: '',\n      BinName: '',\n      _id: ''\n    });\n  };\n\n  // function for displaying all bin posts in database. In a real world application, there would be logic\n  // here for only displaying a certain amount of items in database since there would more than likely \n  // be a large amount of data.\n  displayBinPosts = (posts) => {\n\n    if (!posts.length) return null;\n\n    // iterate through items using map function and display in their respective fields\n    return posts.map((post, index) => (\n\n      <ul>\n        <li>\n          <div className=\"container\">\n            <div className=\"row db-item\" key={index}> \n              <div className=\"col-3 item-comp\">\n                <h5><strong>Bin ID:</strong> {post.BinID}</h5>\n              </div>\n              <div className=\"col-4 item-comp\">\n                <p><strong>Bin Name:</strong> {post.BinName}</p>\n              </div>\n              <div className=\"col-4 item-comp\">\n                <p value={post._id}><strong>_id:</strong><a className=\"idClick\" onClick={this.setModal.bind(this, post)}>{post._id}</a></p>\n              </div>\n              <div className=\"col-1 item-comp\">\n                <p className=\"delete-item\" onClick={this.delete.bind(this, post)} value={post._id}>Delete</p>\n              </div>\n            </div>\n          </div>\n        </li>\n      </ul>\n\n    ));\n  };\n\n  // function toggles modal\n  toggleModal = () => {\n    this.setState({\n      modalIsOpen: ! this.state.modalIsOpen\n    });\n}\n\n  // function toggles modal\n  toggleUpdateModal = () => {\n    this.setState({\n      updateModalIsOpen: ! this.state.updateModalIsOpen\n    });\n}\n\n  // function sets state of update modal\n  setModal = (data, event) => {\n    this.setState({\n      BinID: data.BinID,\n      BinName: data.BinName,\n      _id: data._id\n    });\n\n    this.toggleUpdateModal();\n}\n\n  render() {\n\n    console.log('State: ', this.state);\n\n    return(\n\n      <div>\n\n<Container>\n  <Modal isOpen={this.state.modalIsOpen}>\n    <ModalHeader toggle={this.toggleModal.bind(this)}>\n      Bins\n    </ModalHeader>\n    <ModalBody>\n    <div className=\"add\">\n          <div className=\"banner\"><h4>Add a bin</h4></div>\n            <div className=\"add-body\">\n            <form onSubmit={this.submit}>\n              <div className=\"form-input\">\n                <input\n                  type=\"text\"\n                  name=\"BinID\"\n                  value={this.state.BinID}\n                  placeholder=\"Bin ID\"\n                  onChange={this.handleChange}\n                /> \n              </div>\n              <div className=\"form-input\">\n                <input\n                  type=\"text\"\n                  name=\"BinName\"\n                  value={this.state.BinName}\n                  placeholder=\"Bin Name\"\n                  onChange={this.handleChange}\n                /> \n              </div>\n              <button>Add</button>\n            </form>\n        </div>\n        </div>\n    </ModalBody>\n  </Modal>\n</Container>\n\n<Container>\n  <Modal isOpen={this.state.updateModalIsOpen}>\n    <ModalHeader toggle={this.toggleUpdateModal.bind(this)}>\n      Bins\n    </ModalHeader>\n    <ModalBody>\n         <div className=\"update update-bins\">\n          <div className=\"banner\"><h4>Update bin</h4></div>\n            <div className=\"add-body\">\n            <form onSubmit={this.update}>\n            <div className=\"form-input\">\n                <input\n                  type=\"text\"\n                  name=\"_id\"\n                  value={this.state._id}\n                  placeholder=\"Unique Document ID\"\n                  onChange={this.handleChange}\n                /> \n              </div>\n              <div className=\"form-input\">\n                <input\n                  type=\"text\"\n                  name=\"BinID\"\n                  value={this.state.BinID}\n                  placeholder=\"Bin ID\"\n                  onChange={this.handleChange}\n                /> \n              </div>\n              <div className=\"form-input\">\n                <input\n                  type=\"text\"\n                  name=\"BinName\"\n                  value={this.state.BinName}\n                  placeholder=\"Bin Name\"\n                  onChange={this.handleChange}\n                /> \n              </div>\n              <button type=\"button\" onClick={this.update.bind(this, this.state)}>Update</button>\n            </form>\n        </div>\n        </div> \n    </ModalBody>\n  </Modal>\n</Container>\n\n      <div className=\"dummy-links\">\n        <i className=\"fa fa-download icons\" onClick={this.bannerClick.bind(this, \"download\")}></i>\n        <i className=\"fa fa-bell icons\" onClick={this.bannerClick.bind(this, \"bell\")}></i>\n        <i className=\"fa fa-print icons\" onClick={this.bannerClick.bind(this, \"print\")}></i>\n        <i className=\"fa fa-bookmark icons\" onClick={this.bannerClick.bind(this, \"bookmark\")}></i>\n        <i className=\"fa fa-database icons\" onClick={this.bannerClick.bind(this, \"database\")}></i>\n        <i className=\"fa fa-pause icons\" onClick={this.bannerClick.bind(this,\"pause\")}></i>\n        <i className=\"fa fa-search icons\" onClick={this.bannerClick.bind(this, \"search\")}></i>\n        <i className=\"fa fa-sort icons\" onClick={this.bannerClick.bind(this, \"sort\")}></i>\n        <i className=\"fa fa-plus icons\" type=\"button\" onClick={this.toggleModal}></i>\n      </div>  \n\n      <div className=\"main-container\">\n        <div className=\"banner\"><h1>Bins</h1></div>\n          <br></br>\n\n        <div className=\"bin-posts\">\n          {this.displayBinPosts(this.state.posts)}\n        </div>\n\n    </div>\n    </div>\n    );\n  }\n}\n\n// exports the component to be rendered in other files (App.js)\nexport default Bins;\n","// Copyright Cole Snyder 2020 \nimport React from 'react';\nimport axios from 'axios';\nimport { Container, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nimport './App.css';\n\nclass Products extends React.Component {\n\n  state = {\n    ProductID: '',\n    SKU: '',\n    ProductDescription: '',\n    _id: '',\n    posts: [],\n    modalIsOpen: false,\n    updateModalIsOpen: false\n  };\n\n  componentDidMount = () => {\n    this.getProducts();\n  };\n\n  getProducts = () => {\n    axios.get('/api/products')\n      .then((response) => {\n        const data = response.data;\n        this.setState({ posts: data });\n        console.log('Data has been recieved');\n      })\n      .catch(() => {\n        // alert('error retrieving data');\n      });\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n\n    // manages the alerts sent by the banner\n    bannerClick = (data, type) => {\n      if (data == \"search\") {\n        alert(\"This icon would allow users to search for a specific item in this collection.\");\n      } else if (data == \"pause\") {\n        alert(\"This icon would allow users to pause the flow of data from the backend, stopping the asynchronous data flow.\");\n      } else if (data == \"database\") {\n        alert(\"This icon would allow users to check diagnostics from the database.\");\n      } else if (data == \"bookmark\") {\n        alert(\"This icon would allow users to bookmark this collection for later use.\");\n      } else if (data == \"print\") {\n        alert(\"This icon would allow users to print out the results of a collection of documents.\");\n      } else if (data == \"bell\") {\n        alert(\"This icon would allow users to turn on notifications for a specific collection.\");\n      } else if (data == \"download\") {\n        alert(\"This icon would allow users to download the current collection as a PDF.\");\n      } else if (data == \"sort\") {\n        alert(\"This icon would allow users to sort the collection by number or letter.\");\n      }\n    };\n\n  submit = (event) => {\n    event.preventDefault();\n\n    const payload = {\n        ProductID: this.state.ProductID,\n        SKU: this.state.SKU,\n        ProductDescription: this.state.ProductDescription\n    };\n\n    axios({\n      url: 'http://localhost:3000/api/saveProduct',\n      method: 'POST',\n      data: payload\n    })\n      .then(() => {\n        console.log('Data has been sent to the server');\n        this.resetUserInputs();\n        this.getProducts();\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });\n  };\n\n  delete = (data, event) => {\n    event.preventDefault();\n\n    console.log('Data before sending to server: ', data._id);\n\n    axios({\n      url: 'http://localhost:3000/api/deleteProduct/' + data._id,\n      method: 'POST',\n      data: data._id\n    })\n      .then(() => {\n        console.log('Data has been sent to the server');\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });\n      this.getProducts();\n  };\n\n  update = (data, event) => {\n    event.preventDefault();\n\n    const payload = {\n      ProductID: this.state.ProductID,\n      SKU: this.state.SKU,\n      ProductDescription: this.state.ProductDescription,\n      _id: this.state._id\n    };\n\n    axios({\n      url: 'http://localhost:3000/api/updateProduct/' + data._id + '/' + data.ProductID + '/' + data.SKU + '/' + data.ProductDescription,\n      method: 'POST',\n      data: payload\n    })\n      .then(() => {\n        console.log('Data has been sent to the server');\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });\n      this.resetUserInputs();\n      this.getProducts();\n      this.setState({\n        updateModalIsOpen: ! this.state.updateModalIsOpen\n      });\n  };\n\n  resetUserInputs = () => {\n    this.setState({\n        ProductID: '',\n        SKU: '',\n        ProductDescription: '',\n        _id: ''\n    });\n  };\n\n  displayProductPosts = (posts) => {\n\n    if (!posts.length) return null;\n\n    return posts.map((post, index) => (\n\n\n      <ul>\n        <li>\n          <div className=\"container\">\n            <div className=\"row db-item\"> \n              <div className=\"col-2 item-comp\">\n                <h5><strong>Product ID:</strong> {post.ProductID}</h5>\n              </div>\n              <div className=\"col-2 item-comp\">\n                <p><strong>SKU:</strong> {post.SKU}</p>\n              </div>\n              <div className=\"col-4 item-comp\">\n                <p value={post._id}><strong>ProductDescription:</strong> {post.ProductDescription}</p>\n              </div>\n              <div className=\"col-3 item-comp\">\n                <p><strong>_id:</strong><a className=\"idClick\" onClick={this.setModal.bind(this, post)}>{post._id}</a></p>\n              </div>\n              <div className=\"col-1 item-comp\">\n                <p className=\"delete-item\" onClick={this.delete.bind(this, post)} value={post._id}>Delete</p>\n              </div>\n            </div>\n          </div>\n        </li>\n      </ul>\n    ));\n  };\n\n  // function toggles modal\n  toggleModal = () => {\n    this.setState({\n      modalIsOpen: ! this.state.modalIsOpen\n    });\n}\n\n  // function toggles modal\n  toggleUpdateModal = () => {\n    this.setState({\n      updateModalIsOpen: ! this.state.updateModalIsOpen\n    });\n}\n\n  // function sets state of update modal\n  setModal = (data, event) => {\n    this.setState({\n      ProductID: data.ProductID,\n      SKU: data.SKU,\n      ProductDescription: data.ProductDescription,\n      _id: data._id\n    });\n\n    this.toggleUpdateModal();\n\n}\n\n  render() {\n\n    console.log('State: ', this.state);\n\n    return(\n\n<div>\n\n<Container>\n  <Modal isOpen={this.state.modalIsOpen}>\n    <ModalHeader toggle={this.toggleModal.bind(this)}>\n      Products\n    </ModalHeader>\n    <ModalBody>\n    <div className=\"add\">\n          <div className=\"banner\"><h4>Add Products</h4></div>\n            <div className=\"add-body\">\n            <form onSubmit={this.submit}>\n                    <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"ProductID\"\n                        value={this.state.ProductID}\n                        placeholder=\"Product ID\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n                    <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"SKU\"\n                        value={this.state.SKU}\n                        placeholder=\"SKU\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n                    <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"ProductDescription\"\n                        value={this.state.ProductDescription}\n                        placeholder=\"Product Description\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n              <button>Add</button>\n            </form>\n        </div>\n        </div>\n    </ModalBody>\n  </Modal>\n</Container>\n\n<Container>\n  <Modal isOpen={this.state.updateModalIsOpen}>\n    <ModalHeader toggle={this.toggleUpdateModal.bind(this)}>\n      Products\n    </ModalHeader>\n    <ModalBody>\n    <div className=\"update update-products\">\n          <div className=\"banner\"><h4>Update Product</h4></div>\n            <div className=\"add-body\">\n            <form onSubmit={this.update}>\n            <div className=\"form-input\">\n                <input\n                  type=\"text\"\n                  name=\"_id\"\n                  value={this.state._id}\n                  placeholder=\"Unique Document ID\"\n                  onChange={this.handleChange}\n                /> \n              </div>\n              <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"ProductID\"\n                        value={this.state.ProductID}\n                        placeholder=\"Product ID\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n                    <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"SKU\"\n                        value={this.state.SKU}\n                        placeholder=\"SKU\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n                    <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"ProductDescription\"\n                        value={this.state.ProductDescription}\n                        placeholder=\"Product Description\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n              <button type=\"button\" onClick={this.update.bind(this, this.state)}>Update</button>\n            </form>\n        </div>\n        </div>\n    </ModalBody>\n  </Modal>\n</Container>\n\n      <div className=\"dummy-links\">\n        <i className=\"fa fa-download icons\" onClick={this.bannerClick.bind(this, \"download\")}></i>\n        <i className=\"fa fa-bell icons\" onClick={this.bannerClick.bind(this, \"bell\")}></i>\n        <i className=\"fa fa-print icons\" onClick={this.bannerClick.bind(this, \"print\")}></i>\n        <i className=\"fa fa-bookmark icons\" onClick={this.bannerClick.bind(this, \"bookmark\")}></i>\n        <i className=\"fa fa-database icons\" onClick={this.bannerClick.bind(this, \"database\")}></i>\n        <i className=\"fa fa-pause icons\" onClick={this.bannerClick.bind(this,\"pause\")}></i>\n        <i className=\"fa fa-search icons\" onClick={this.bannerClick.bind(this, \"search\")}></i>\n        <i className=\"fa fa-sort icons\" onClick={this.bannerClick.bind(this, \"sort\")}></i>\n        <i className=\"fa fa-plus icons\" type=\"button\" onClick={this.toggleModal}></i>\n      </div> \n      <div className=\"main-container\">\n        <div className=\"banner\"><h1>Products</h1></div>\n          <br></br>\n\n        <div className=\"bin-posts\">\n          {this.displayProductPosts(this.state.posts)}\n        </div>\n\n    </div>\n    </div>\n    );\n  }\n}\n\nexport default Products;\n","// Copyright Cole Snyder 2020 \nimport React from 'react';\nimport axios from 'axios';\nimport { Container, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nimport './App.css';\n\nclass Inventory extends React.Component {\n\n  state = {\n    InventoryID: '',\n    ProductID: '',\n    BinID: '',\n    QTY: '',\n    _id: '',\n    posts: [],\n    modalIsOpen: false,\n    updateModalIsOpen: false\n  };\n\n  componentDidMount = () => {\n    this.getInventory();\n  };\n\n  getInventory = () => {\n    axios.get('/api/inventory')\n      .then((response) => {\n        const data = response.data;\n        this.setState({ posts: data });\n        console.log('Data has been recieved');\n      })\n      .catch(() => {\n        // alert('error retrieving data');\n      });\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n\n    // manages the alerts sent by the banner\n    bannerClick = (data, type) => {\n      if (data == \"search\") {\n        alert(\"This icon would allow users to search for a specific item in this collection.\");\n      } else if (data == \"pause\") {\n        alert(\"This icon would allow users to pause the flow of data from the backend, stopping the asynchronous data flow.\");\n      } else if (data == \"database\") {\n        alert(\"This icon would allow users to check diagnostics from the database.\");\n      } else if (data == \"bookmark\") {\n        alert(\"This icon would allow users to bookmark this collection for later use.\");\n      } else if (data == \"print\") {\n        alert(\"This icon would allow users to print out the results of a collection of documents.\");\n      } else if (data == \"bell\") {\n        alert(\"This icon would allow users to turn on notifications for a specific collection.\");\n      } else if (data == \"download\") {\n        alert(\"This icon would allow users to download the current collection as a PDF.\");\n      } else if (data == \"sort\") {\n        alert(\"This icon would allow users to sort the collection by number or letter.\");\n      }\n    };\n\n  submit = (event) => {\n    event.preventDefault();\n\n    const payload = {\n        InventoryID: this.state.InventoryID,\n        ProductID: this.state.ProductID,\n        BinID: this.state.BinID,\n        QTY: this.state.QTY,\n    };\n\n    axios({\n      url: 'http://localhost:3000/api/saveInventory',\n      method: 'POST',\n      data: payload\n    })\n      .then(() => {\n        console.log('Data has been sent to the server');\n        this.resetUserInputs();\n        this.getInventory();\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });\n  };\n\n  delete = (data, event) => {\n    event.preventDefault();\n\n    console.log('Data before sending to server: ', data._id);\n\n    axios({\n      url: 'http://localhost:3000/api/deleteInventory/' + data._id ,\n      method: 'POST',\n      data: data._id\n    })\n      .then(() => {\n        console.log('Data has been sent to the server');\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });\n      this.getInventory();\n  };\n\n  update = (data, event) => {\n    event.preventDefault();\n\n    const payload = {\n      InventoryID: this.state.InventoryID,\n      ProductID: this.state.ProductID,\n      BinID: this.state.BinID,\n      QTY: this.state.QTY,\n      _id: this.state._id\n    };\n\n    axios({\n      url: 'http://localhost:3000/api/updateInventory/' + data._id + '/' + data.InventoryID + '/' + data.ProductID + '/' + data.BinID + '/' + data.QTY,\n      method: 'POST',\n      data: payload\n    })\n      .then(() => {\n        console.log('Data has been sent to the server');\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });\n      this.resetUserInputs();\n      this.getInventory();\n      this.setState({\n        updateModalIsOpen: ! this.state.updateModalIsOpen\n      });\n  };\n\n  resetUserInputs = () => {\n    this.setState({\n        InventoryID: '',\n        ProductID: '',\n        BinID: '',\n        QTY: '',\n        _id: ''\n    });\n  };\n\n  displayInventoryPosts = (posts) => {\n\n    if (!posts.length) return null;\n\n    return posts.map((post, index) => (\n\n      <ul>\n        <li>\n          <div className=\"container\">\n            <div className=\"row db-item\"> \n              <div className=\"col-2 item-comp\">\n                <h5><strong>Inventory ID:</strong> {post.InventoryID}</h5>\n              </div>\n              <div className=\"col-2 item-comp\">\n                <p><strong>Product ID:</strong> {post.ProductID}</p>\n              </div>\n              <div className=\"col-2 item-comp\">\n                <p><strong>Bin ID:</strong> {post.BinID}</p>\n              </div>\n              <div className=\"col-2 item-comp\">\n                <p><strong>QTY:</strong> {post.QTY}</p>\n              </div>\n              <div className=\"col-3 item-comp\">\n                <p value={post._id}><strong>_id:</strong><a className=\"idClick\" onClick={this.setModal.bind(this, post)}>{post._id}</a></p>\n              </div>\n              <div className=\"col-1 item-comp\">\n                <p className=\"delete-item\" onClick={this.delete.bind(this, post)} value={post._id}>Delete</p>\n              </div>\n            </div>\n          </div>\n        </li>\n      </ul>\n\n    ));\n  };\n\n  toggleModal = () => {\n    this.setState({\n      modalIsOpen: ! this.state.modalIsOpen\n    });\n}\n\n  // function toggles modal\n  toggleUpdateModal = () => {\n    this.setState({\n      updateModalIsOpen: ! this.state.updateModalIsOpen\n    });\n}\n\n  // function sets state of update modal\n  setModal = (data, event) => {\n    this.setState({\n      InventoryID: data.InventoryID,\n      ProductID: data.ProductID,\n      BinID: data.BinID,\n      QTY: data.BinID,\n      _id: data._id\n    });\n\n    this.toggleUpdateModal();\n\n}\n\n  render() {\n\n    console.log('State: ', this.state);\n\n    return(\n\n      <div>\n\n<Container>\n  <Modal isOpen={this.state.modalIsOpen}>\n    <ModalHeader toggle={this.toggleModal.bind(this)}>\n      Inventory\n    </ModalHeader>\n    <ModalBody>\n    <div className=\"add\">\n          <div className=\"banner\"><h4>Add to Inventory</h4></div>\n            <div className=\"add-body\">\n            <form onSubmit={this.submit}>\n            <div className=\"form-input\">\n                       <input\n                         type=\"text\"\n                         name=\"InventoryID\"\n                         value={this.state.InventoryID}\n                         placeholder=\"Inventory ID\"\n                         onChange={this.handleChange}\n                       /> \n                     </div>\n                     <div className=\"form-input\">\n                       <input\n                         type=\"text\"\n                         name=\"ProductID\"\n                         value={this.state.ProductID}\n                         placeholder=\"Product ID\"\n                         onChange={this.handleChange}\n                       /> \n                     </div>\n                     <div className=\"form-input\">\n                       <input\n                         type=\"text\"\n                         name=\"BinID\"\n                         value={this.state.BinID}\n                         placeholder=\"Bin ID\"\n                         onChange={this.handleChange}\n                       /> \n                     </div>\n                     <div className=\"form-input\">\n                       <input\n                         type=\"text\"\n                         name=\"QTY\"\n                         value={this.state.QTY}\n                         placeholder=\"QTY\"\n                         onChange={this.handleChange}\n                       /> \n                     </div>\n              <button>Add</button>\n            </form>\n        </div>\n        </div>\n    </ModalBody>\n  </Modal>\n</Container>\n\n<Container>\n  <Modal isOpen={this.state.updateModalIsOpen}>\n    <ModalHeader toggle={this.toggleUpdateModal.bind(this)}>\n      Inventory\n    </ModalHeader>\n    <ModalBody>\n    <div className=\"update update-inventory\">\n          <div className=\"banner\"><h4>Update Inventory</h4></div>\n            <div className=\"add-body\">\n            <form onSubmit={this.update}>\n            <div className=\"form-input\">\n                <input\n                  type=\"text\"\n                  name=\"_id\"\n                  value={this.state._id}\n                  placeholder=\"Unique Document ID\"\n                  onChange={this.handleChange}\n                /> \n              </div>\n              <div className=\"form-input\">\n                       <input\n                         type=\"text\"\n                         name=\"InventoryID\"\n                         value={this.state.InventoryID}\n                         placeholder=\"Inventory ID\"\n                         onChange={this.handleChange}\n                       /> \n                     </div>\n                     <div className=\"form-input\">\n                       <input\n                         type=\"text\"\n                         name=\"ProductID\"\n                         value={this.state.ProductID}\n                         placeholder=\"Product ID\"\n                         onChange={this.handleChange}\n                       /> \n                     </div>\n                     <div className=\"form-input\">\n                       <input\n                         type=\"text\"\n                         name=\"BinID\"\n                         value={this.state.BinID}\n                         placeholder=\"Bin ID\"\n                         onChange={this.handleChange}\n                       /> \n                     </div>\n                     <div className=\"form-input\">\n                       <input\n                         type=\"text\"\n                         name=\"QTY\"\n                         value={this.state.QTY}\n                         placeholder=\"QTY\"\n                         onChange={this.handleChange}\n                       /> \n                     </div>\n              <button type=\"button\" onClick={this.update.bind(this, this.state)}>Update</button>\n            </form>\n        </div>\n        </div>\n    </ModalBody>\n  </Modal>\n</Container>\n\n\n      <div className=\"dummy-links\">\n      <i className=\"fa fa-download icons\" onClick={this.bannerClick.bind(this, \"download\")}></i>\n        <i className=\"fa fa-bell icons\" onClick={this.bannerClick.bind(this, \"bell\")}></i>\n        <i className=\"fa fa-print icons\" onClick={this.bannerClick.bind(this, \"print\")}></i>\n        <i className=\"fa fa-bookmark icons\" onClick={this.bannerClick.bind(this, \"bookmark\")}></i>\n        <i className=\"fa fa-database icons\" onClick={this.bannerClick.bind(this, \"database\")}></i>\n        <i className=\"fa fa-pause icons\" onClick={this.bannerClick.bind(this,\"pause\")}></i>\n        <i className=\"fa fa-search icons\" onClick={this.bannerClick.bind(this, \"search\")}></i>\n        <i className=\"fa fa-sort icons\" onClick={this.bannerClick.bind(this, \"sort\")}></i>\n        <i className=\"fa fa-plus icons\" type=\"button\" onClick={this.toggleModal}></i>\n      </div>  \n      <div className=\"main-container\">\n        <div className=\"banner\"><h1>Inventory</h1></div>\n          <br></br>\n\n        <div className=\"bin-posts\">\n          {this.displayInventoryPosts(this.state.posts)}\n        </div>\n\n    </div>\n    </div>\n\n    );\n  }\n}\n\nexport default Inventory;\n","// Copyright Cole Snyder 2020 \nimport React from 'react';\nimport axios from 'axios';\nimport { Container, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\n\nimport './App.css';\n\nclass Order extends React.Component {\n\n  state = {\n    OrderID: '',\n    OrderNumber: '',\n    DateOrdered: '',\n    CustomerName: '',\n    CustomerAddress: '',\n    _id: '',\n    posts: [],\n    modalIsOpen: false,\n    updateModalIsOpen: false\n  };\n\n  componentDidMount = () => {\n    this.getOrders();\n  };\n\n  getOrders = () => {\n    axios.get('/api/orders')\n      .then((response) => {\n        const data = response.data;\n        this.setState({ posts: data });\n        console.log('Data has been recieved');\n      })\n      .catch(() => {\n        // alert('error retrieving data');\n      });\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n  \n    // manages the alerts sent by the banner\n    bannerClick = (data, type) => {\n      if (data == \"search\") {\n        alert(\"This icon would allow users to search for a specific item in this collection.\");\n      } else if (data == \"pause\") {\n        alert(\"This icon would allow users to pause the flow of data from the backend, stopping the asynchronous data flow.\");\n      } else if (data == \"database\") {\n        alert(\"This icon would allow users to check diagnostics from the database.\");\n      } else if (data == \"bookmark\") {\n        alert(\"This icon would allow users to bookmark this collection for later use.\");\n      } else if (data == \"print\") {\n        alert(\"This icon would allow users to print out the results of a collection of documents.\");\n      } else if (data == \"bell\") {\n        alert(\"This icon would allow users to turn on notifications for a specific collection.\");\n      } else if (data == \"download\") {\n        alert(\"This icon would allow users to download the current collection as a PDF.\");\n      } else if (data == \"sort\") {\n        alert(\"This icon would allow users to sort the collection by number or letter.\");\n      }\n    };\n\n  submit = (event) => {\n    event.preventDefault();\n\n    const payload = {\n        OrderID: this.state.OrderID,\n        OrderNumber: this.state.OrderNumber,\n        DateOrdered: this.state.DateOrdered,\n        CustomerName: this.state.CustomerName,\n        CustomerAddress: this.state.CustomerAddress\n    };\n\n    axios({\n      url: 'http://localhost:3000/api/saveOrder',\n      method: 'POST',\n      data: payload\n    })\n      .then(() => {\n        console.log('Data has been sent to the server');\n        this.resetUserInputs();\n        this.getOrders();\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });\n  };\n\n  delete = (data, event) => {\n    event.preventDefault();\n\n    console.log('Data before sending to server: ', data._id);\n\n    axios({\n      url: 'http://localhost:3000/api/deleteOrder/' + data._id,\n      method: 'POST',\n      data: data._id\n    })\n      .then(() => {\n        console.log('Data has been sent to the server');\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });\n      this.getOrders();\n  };\n\n  update = (data, event) => {\n    event.preventDefault();\n\n    const payload = {\n      OrderID: this.state.OrderID,\n      OrderNumber: this.state.OrderNumber,\n      DateOrdered: this.state.DateOrdered,\n      CustomerName: this.state.CustomerName,\n      CustomerAddress: this.state.CustomerAddress,\n      _id: this.state._id\n    };\n\n    axios({\n      url: 'http://localhost:3000/api/updateOrder/' + data._id + '/' + data.OrderID + '/' + data.OrderNumber + '/' + data.DateOrdered + '/' + data.CustomerName + '/' + data.CustomerAddress,\n      method: 'POST',\n      data: payload\n    })\n      .then(() => {\n        console.log('Data has been sent to the server');\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });\n      this.resetUserInputs();\n      this.getOrders();\n      this.setState({\n        updateModalIsOpen: ! this.state.updateModalIsOpen\n      });\n  };\n\n  resetUserInputs = () => {\n    this.setState({\n        OrderID: '',\n        OrderNumber: '',\n        DateOrdered: '',\n        CustomerName: '',\n        CustomerAddress: '',\n        _id: ''\n    });\n  };\n\n  displayOrderPosts = (posts) => {\n\n    if (!posts.length) return null;\n\n    return posts.map((post, index) => (\n\n      <ul>\n        <li>\n          <div className=\"container\">\n            <div className=\"row db-item\"> \n              <div className=\"col-2 item-comp\">\n                <h5><strong>Order ID:</strong> {post.OrderID}</h5>\n              </div>\n              <div className=\"col-1 item-comp\">\n                <p><strong>Order Number:</strong> {post.OrderNumber}</p>\n              </div>\n              <div className=\"col-1 item-comp\">\n                <p><strong>Date Ordered:</strong> {post.DateOrdered}</p>\n              </div>\n              <div className=\"col-2 item-comp\">\n                <p><strong>Customer Name:</strong> {post.CustomerName}</p>\n              </div>\n              <div className=\"col-2 item-comp\">\n                <p><strong>Customer Address:</strong> {post.CustomerAddress}</p>\n              </div>\n              <div className=\"col-3 item-comp\">\n                <p><strong>_id:</strong><a className=\"idClick\" onClick={this.setModal.bind(this, post)}>{post._id}</a></p>              \n              </div>\n\n              <div className=\"col-1 item-comp\">\n                <p className=\"delete-item\" onClick={this.delete.bind(this, post)} value={post._id}>Delete</p>\n              </div>\n            </div>\n          </div>\n        </li>\n      </ul>\n\n    ));\n  };\n\n  toggleModal = () => {\n    this.setState({\n      modalIsOpen: ! this.state.modalIsOpen\n    });\n}\n\n  // function toggles modal\n  toggleModal = () => {\n    this.setState({\n      modalIsOpen: ! this.state.modalIsOpen\n    });\n}\n\n  // function toggles modal\n  toggleUpdateModal = () => {\n    this.setState({\n      updateModalIsOpen: ! this.state.updateModalIsOpen\n    });\n}\n\n  // function sets state of update modal\n  setModal = (data, event) => {\n    this.setState({\n      OrderID: data.OrderID,\n      OrderNumber: data.OrderNumber,\n      DateOrdered: data.DateOrdered,\n      CustomerName: data.CustomerName,\n      CustomerAddress: data.CustomerAddress,\n      _id: data._id\n    });\n\n    this.toggleUpdateModal();\n\n}\n\n  render() {\n\n    console.log('State: ', this.state);\n\n    return(\n\n      <div>\n\n<Container>\n  <Modal isOpen={this.state.modalIsOpen}>\n    <ModalHeader toggle={this.toggleModal.bind(this)}>\n      Orders\n    </ModalHeader>\n    <ModalBody>\n    <div className=\"add\">\n          <div className=\"banner\"><h4>Add an Order</h4></div>\n            <div className=\"add-body\">\n            <form onSubmit={this.submit}>\n            <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"OrderID\"\n                        value={this.state.OrderID}\n                        placeholder=\"Order ID\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n                    <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"OrderNumber\"\n                        value={this.state.OrderNumber}\n                        placeholder=\"Order Number\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n                    <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"DateOrdered\"\n                        value={this.state.DateOrdered}\n                        placeholder=\"Date Ordered\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n                    <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"CustomerName\"\n                        value={this.state.CustomerName}\n                        placeholder=\"Customer Name\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n                    <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"CustomerAddress\"\n                        value={this.state.CustomerAddress}\n                        placeholder=\"Customer Address\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n              <button>Add</button>\n            </form>\n        </div>\n        </div>\n    </ModalBody>\n  </Modal>\n</Container>\n\n<Container>\n  <Modal isOpen={this.state.updateModalIsOpen}>\n    <ModalHeader toggle={this.toggleUpdateModal.bind(this)}>\n      Orders\n    </ModalHeader>\n    <ModalBody>\n    <div className=\"update update-order\">\n          <div className=\"banner\"><h4>Update Order</h4></div>\n            <div className=\"add-body\">\n\n            <form onSubmit={this.update}>\n            <div className=\"form-input\">\n                <input\n                  type=\"text\"\n                  name=\"_id\"\n                  value={this.state._id}\n                  placeholder=\"Unique Document ID\"\n                  onChange={this.handleChange}\n                /> \n              </div>\n              <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"OrderID\"\n                        value={this.state.OrderID}\n                        placeholder=\"Order ID\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n                    <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"OrderNumber\"\n                        value={this.state.OrderNumber}\n                        placeholder=\"Order Number\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n                    <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"DateOrdered\"\n                        value={this.state.DateOrdered}\n                        placeholder=\"Date Ordered\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n                    <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"CustomerName\"\n                        value={this.state.CustomerName}\n                        placeholder=\"Customer Name\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n                    <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"CustomerAddress\"\n                        value={this.state.CustomerAddress}\n                        placeholder=\"Customer Address\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n              <button type=\"button\" onClick={this.update.bind(this, this.state)}>Update</button>\n            </form>\n        </div>\n        </div>\n    </ModalBody>\n  </Modal>\n</Container>\n\n\n      <div className=\"dummy-links\">\n      <i className=\"fa fa-download icons\" onClick={this.bannerClick.bind(this, \"download\")}></i>\n        <i className=\"fa fa-bell icons\" onClick={this.bannerClick.bind(this, \"bell\")}></i>\n        <i className=\"fa fa-print icons\" onClick={this.bannerClick.bind(this, \"print\")}></i>\n        <i className=\"fa fa-bookmark icons\" onClick={this.bannerClick.bind(this, \"bookmark\")}></i>\n        <i className=\"fa fa-database icons\" onClick={this.bannerClick.bind(this, \"database\")}></i>\n        <i className=\"fa fa-pause icons\" onClick={this.bannerClick.bind(this,\"pause\")}></i>\n        <i className=\"fa fa-search icons\" onClick={this.bannerClick.bind(this, \"search\")}></i>\n        <i className=\"fa fa-sort icons\" onClick={this.bannerClick.bind(this, \"sort\")}></i>\n        <i className=\"fa fa-plus icons\" type=\"button\" onClick={this.toggleModal}></i>\n      </div> \n      <div className=\"main-container\">\n        <div className=\"banner\"><h1>Orders</h1></div>\n          <br></br>\n        <div className=\"bin-posts\">\n          {this.displayOrderPosts(this.state.posts)}\n        </div>\n\n    </div>\n    </div>\n    );\n  }\n}\n\nexport default Order;\n","// Copyright Cole Snyder 2020 \nimport React from 'react';\nimport axios from 'axios';\nimport { Container, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nimport './App.css';\n\nclass OrderLine extends React.Component {\n\n  state = {\n    OrderLineID: '',\n    OrderID: '',\n    ProductID: '',\n    QTY: '',\n    _id: '',\n    posts: [],\n    modalIsOpen: false,\n    updateModalIsOpen: false\n  };\n\n  componentDidMount = () => {\n    this.getOrderLines();\n  };\n\n  getOrderLines = () => {\n    axios.get('/api/order-lines')\n      .then((response) => {\n        const data = response.data;\n        this.setState({ posts: data });\n        console.log('Data has been recieved');\n      })\n      .catch(() => {\n        // alert('error retrieving data');\n      });\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n\n    // manages the alerts sent by the banner\n    bannerClick = (data, type) => {\n      if (data == \"search\") {\n        alert(\"This icon would allow users to search for a specific item in this collection.\");\n      } else if (data == \"pause\") {\n        alert(\"This icon would allow users to pause the flow of data from the backend, stopping the asynchronous data flow.\");\n      } else if (data == \"database\") {\n        alert(\"This icon would allow users to check diagnostics from the database.\");\n      } else if (data == \"bookmark\") {\n        alert(\"This icon would allow users to bookmark this collection for later use.\");\n      } else if (data == \"print\") {\n        alert(\"This icon would allow users to print out the results of a collection of documents.\");\n      } else if (data == \"bell\") {\n        alert(\"This icon would allow users to turn on notifications for a specific collection.\");\n      } else if (data == \"download\") {\n        alert(\"This icon would allow users to download the current collection as a PDF.\");\n      } else if (data == \"sort\") {\n        alert(\"This icon would allow users to sort the collection by number or letter.\");\n      }\n    };\n\n  submit = (event) => {\n    event.preventDefault();\n\n    const payload = {\n        OrderLineID: this.state.OrderLineID,\n        OrderID: this.state.OrderID,\n        ProductID: this.state.ProductID,\n        QTY: this.state.QTY\n    };\n\n    axios({\n      url: 'http://localhost:3000/api/saveOrderLines',\n      method: 'POST',\n      data: payload\n    })\n      .then(() => {\n        console.log('Data has been sent to the server');\n        this.resetUserInputs();\n        this.getOrderLines();\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });\n  };\n\n  delete = (data, event) => {\n    event.preventDefault();\n\n    console.log('Data before sending to server: ', data._id);\n\n    axios({\n      url: 'http://localhost:3000/api/deleteOrderLines/' + data._id,\n      method: 'POST',\n      data: data._id\n    })\n      .then(() => {\n        console.log('Data has been sent to the server');\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });\n      this.getOrderLines();\n  };\n\n  update = (data, event) => {\n    event.preventDefault();\n\n    const payload = {\n      OrderLineID: this.state.OrderLineID,\n      OrderID: this.state.OrderID,\n      ProductID: this.state.ProductID,\n      QTY: this.state.QTY,\n      _id: this.state._id\n    };\n\n    axios({\n      url: 'http://localhost:3000/api/updateOrderLines/' + data._id + '/' + data.OrderLineID + '/' + data.OrderID + '/' + data.ProductID + '/' + data.QTY,\n      method: 'POST',\n      data: payload\n    })\n      .then(() => {\n        console.log('Data has been sent to the server');\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });\n      this.resetUserInputs();\n      this.getOrderLines();\n      this.setState({\n        updateModalIsOpen: ! this.state.updateModalIsOpen\n      });\n  };\n\n  resetUserInputs = () => {\n    this.setState({\n        OrderLineID: '',\n        OrderID: '',\n        ProductID: '',\n        QTY: '',\n        _id: ''\n    });\n  };\n\n  displayOrderLinePosts = (posts) => {\n\n    if (!posts.length) return null;\n\n    return posts.map((post, index) => (\n\n\n     <ul>\n        <li>\n          <div className=\"container\">\n            <div className=\"row db-item\"> \n              <div className=\"col-3 item-comp\">\n                <h5><strong>Order Line ID:</strong> {post.OrderLineID}</h5>\n              </div>\n              <div className=\"col-2 item-comp\">\n                <p><strong>Order ID:</strong> {post.OrderID}</p>\n              </div>\n              <div className=\"col-2 item-comp\">\n                <p><strong>Product ID:</strong> {post.ProductID}</p>\n              </div>\n              <div className=\"col-1 item-comp\">\n                <p><strong>QTY:</strong> {post.QTY}</p>\n              </div>\n              <div className=\"col-3 item-comp\">\n                <p value={post._id}><strong>_id:</strong><a className=\"idClick\" onClick={this.setModal.bind(this, post)}>{post._id}</a></p>\n              </div>\n              <div className=\"col-1 item-comp\">\n                <p className=\"delete-item\" onClick={this.delete.bind(this, post)} value={post._id}>Delete</p>\n              </div>\n            </div>\n          </div>\n        </li>\n      </ul>\n\n    ));\n  };\n\n\n  toggleModal = () => {\n    this.setState({\n      modalIsOpen: ! this.state.modalIsOpen\n    });\n}\n\n  // function toggles modal\n  toggleUpdateModal = () => {\n    this.setState({\n      updateModalIsOpen: ! this.state.updateModalIsOpen\n    });\n}\n\n  // function sets state of update modal\n  setModal = (data, event) => {\n    this.setState({\n      OrderLineID: data.OrderLineID,\n      OrderID: data.OrderID,\n      ProductID: data.ProductID,\n      QTY: data.QTY,\n      _id: data._id\n    });\n\n    this.toggleUpdateModal();\n\n}\n\n  render() {\n\n    console.log('State: ', this.state);\n\n    return(\n\n      <div>\n\n<Container>\n  <Modal isOpen={this.state.modalIsOpen}>\n    <ModalHeader toggle={this.toggleModal.bind(this)}>\n      Order Lines\n    </ModalHeader>\n    <ModalBody>\n    <div className=\"add\">\n          <div className=\"banner\"><h4>Add an Order Line</h4></div>\n            <div className=\"add-body\">\n            <form onSubmit={this.submit}>\n              <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"OrderLineID\"\n                        value={this.state.OrderLineID}\n                        placeholder=\"Order Line ID\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n                    <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"OrderID\"\n                        value={this.state.OrderID}\n                        placeholder=\"Order ID\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n                    <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"ProductID\"\n                        value={this.state.ProductID}\n                        placeholder=\"Product ID\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n                    <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"QTY\"\n                        value={this.state.QTY}\n                        placeholder=\"QTY\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n              <button>Add</button>\n            </form>\n        </div>\n        </div>\n    </ModalBody>\n  </Modal>\n</Container>\n\n<Container>\n  <Modal isOpen={this.state.updateModalIsOpen}>\n    <ModalHeader toggle={this.toggleUpdateModal.bind(this)}>\n      Order Lines\n    </ModalHeader>\n    <ModalBody>\n    <div className=\"update update-order-line\">\n          <div className=\"banner\"><h4>Update Line</h4></div>\n            <div className=\"add-body\">\n            <form onSubmit={this.update}>\n            <div className=\"form-input\">\n                <input\n                  type=\"text\"\n                  name=\"_id\"\n                  value={this.state._id}\n                  placeholder=\"Unique Document ID\"\n                  onChange={this.handleChange}\n                /> \n              </div>\n              <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"OrderLineID\"\n                        value={this.state.OrderLineID}\n                        placeholder=\"Order Line ID\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n                    <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"OrderID\"\n                        value={this.state.OrderID}\n                        placeholder=\"Order ID\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n                    <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"ProductID\"\n                        value={this.state.ProductID}\n                        placeholder=\"Product ID\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n                    <div className=\"form-input\">\n                      <input\n                        type=\"text\"\n                        name=\"QTY\"\n                        value={this.state.QTY}\n                        placeholder=\"QTY\"\n                        onChange={this.handleChange}\n                      /> \n                    </div>\n              <button type=\"button\" onClick={this.update.bind(this, this.state)}>Update</button>\n            </form>\n        </div>\n        </div>\n    </ModalBody>\n  </Modal>\n</Container>\n\n\n      <div className=\"dummy-links\">\n      <i className=\"fa fa-download icons\" onClick={this.bannerClick.bind(this, \"download\")}></i>\n        <i className=\"fa fa-bell icons\" onClick={this.bannerClick.bind(this, \"bell\")}></i>\n        <i className=\"fa fa-print icons\" onClick={this.bannerClick.bind(this, \"print\")}></i>\n        <i className=\"fa fa-bookmark icons\" onClick={this.bannerClick.bind(this, \"bookmark\")}></i>\n        <i className=\"fa fa-database icons\" onClick={this.bannerClick.bind(this, \"database\")}></i>\n        <i className=\"fa fa-pause icons\" onClick={this.bannerClick.bind(this,\"pause\")}></i>\n        <i className=\"fa fa-search icons\" onClick={this.bannerClick.bind(this, \"search\")}></i>\n        <i className=\"fa fa-sort icons\" onClick={this.bannerClick.bind(this, \"sort\")}></i>\n        <i className=\"fa fa-plus icons\" type=\"button\" onClick={this.toggleModal}></i>\n      </div> \n\n      <div className=\"main-container\">\n        <div className=\"banner\"><h1>Order Lines</h1></div>\n          <br></br>\n        <div className=\"bin-posts\">\n          {this.displayOrderLinePosts(this.state.posts)}\n        </div>\n\n    </div>\n    </div>\n\n    );\n  }\n}\n\nexport default OrderLine;\n","// Copyright Cole Snyder 2020 \nimport React from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nimport Bins from './bins';\nimport Products from './product';\nimport Inventory from './inventory';\nimport Order from './order';\nimport OrderLine from './order-lines';\n\nimport './App.css';\n\nclass Home extends React.Component {\n\n  render() {\n\n    console.log('State: ', this.state);\n\n    return(\n    \n    <div className=\"home-backgroud darken\">    \n      <h1 className=\"welcomeh1\">Welcome to the <i>MERN Warehouse</i></h1>\n      <p className=\"homeP\">Please navigate to one of the following warehouse components and rememeber - <br></br>\n        always wear your hard hat :)</p>\n      <div className=\"container buttonArea\">\n        <div className=\"row\">\n\n          <div className=\"col-2\"><Link to=\"/bins\"><button className=\"homeButton\">BINS</button></Link></div>\n          <div className=\"col-2\"><Link to=\"/products\"><button className=\"homeButton\">PRODUCTS</button></Link></div>\n          <div className=\"col-2\"><Link to=\"/inventory\"><button className=\"homeButton\">INVENTORY</button></Link></div>\n          <div className=\"col-2\"><Link to=\"/orders\"><button className=\"homeButton\">ORDERS</button></Link></div>\n          <div className=\"col-2\"><Link to=\"/order-lines\"><button className=\"homeButton\">ORDER LINES</button></Link></div>\n\n        </div>\n      </div>  \n    </div>\n    );\n  }\n}\n\nexport default Home;\n","// Copyright Cole Snyder 2020 \nimport React from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport Bins from './bins';\nimport Products from './product';\nimport Inventory from './inventory';\nimport Order from './order';\nimport OrderLine from './order-lines';\nimport Home from './home';\n\n// this is the main rendered component. It holds the navbar that is on every page, and the \n// routing logic for each component is also here. \nclass App extends React.Component {\n\n  render() {\n\n    return(\n\n      <Router>\n\n        <nav className=\"navbar navbar-expand-lg\">\n          <div className=\"container\">\n            <div className=\"row\">\n            <div className=\"col-11\">\n              <h2 className=\"navbar-brand nav-title\">MERN Warehouse</h2>\n            </div>\n\n            <div className=\"col-1\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"navbar-item\">\n                  <Link to=\"/bins\" className=\"navbar-brand link\">Bins</Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/products\" className=\"navbar-brand link\">Products</Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/inventory\" className=\"navbar-brand link\">Inventory</Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/orders\" className=\"navbar-brand link\">Orders</Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/order-lines\" className=\"navbar-brand link\">Order Lines</Link>\n                </li>\n              </ul>\n            </div>\n            </div>\n          </div>\n        </nav>\n        <Route path='/' exact component={Home}/>\n        <Route path='/bins' component={Bins} />\n        <Route path='/products' component={Products} />\n        <Route path='/orders' component={Order} />\n        <Route path='/order-lines' component={OrderLine} />\n        <Route path='/inventory' component={Inventory} />\n      </Router>\n\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Index.js holds the app.js main component. This is the root component\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}